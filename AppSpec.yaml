AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  MyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: test
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: MyApi
        paths:
          /sample:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyLambdaFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: ANY
                type: aws
    Metadata:
      SamResourceId: MyApi
  MyLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get_items.lambda_handler
      Runtime: python3.8
      FunctionName: MyLambdaFunction1
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-vxlzybp516uf/9d6f4cb7fcbe164911a34a9e73b5b6bb
      Timeout: 10
      Events:
        MyApi:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: MyApi
            Path: /sample
            Method: ANY
    Metadata:
      SamResourceId: MyLambdaFunction
  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sampl-table-for-sam
      AttributeDefinitions:
      - AttributeName: user_name
        AttributeType: S
      - AttributeName: email
        AttributeType: S
      KeySchema:
      - AttributeName: user_name
        KeyType: HASH
      - AttributeName: email
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    Metadata:
      SamResourceId: MyDynamoDBTable
